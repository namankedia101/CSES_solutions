//APPROACH- (RECURSIVE)


//////////////////////////////////////////////////////// APPROACH - TC =(x.n^2) , SC= (x.n) ////////////////////////////////////////////////////////
vi v(n);
vc(n,v);

vvi dp(x+1,vi(n,0));

for(i=0;i<n;i++){
    dp[0][i]=1;
    if(v[i]<=x){
        dp[v[i]][i]=1;
    }
}

for(i=1;i<=x;i++){
    for(k=0;k<n;k++){
        if(!dp[i][k])continue;
        for(j=k;j<n;j++){
            if(i+v[j]<=x){
                dp[i+v[j]][j]=mod_add(dp[i][k],dp[i+v[j]][j],MOD);
            }
        }
    }
}

for(i=0;i<n;i++)ans+=dp[x][i];
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//APPROACH - TC =(x.n) , SC= (x.n)

//////////////////////////////////////////////////////// APPROACH - TC =(x.n) , SC= (x) ////////////////////////////////////////////////////////
vi v,dp(x+1,0);
vc(n,v);

dp[0]=1;
for(i=0;i<n;i++){
  for(j=1;j<=x;j++){
      if(j-v[i]>=0){
          dp[j]=mod_add(dp[j],dp[j-v[i]],MOD);
      }
  }
}
cout<<dp[x];
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
